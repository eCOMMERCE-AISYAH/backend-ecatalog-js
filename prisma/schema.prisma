generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id            Int            @id @default(autoincrement())
  name          String         @db.VarChar(200)
  description   String         @db.Text
  stock         Int            @db.SmallInt
  price         Int
  subCategoryId Int            @db.SmallInt
  sub_category  SubCategory    @relation(fields: [subCategoryId], references: [id])
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  images        ProductImage[]
  CartProducts  CartProducts[]
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  image     String   @db.VarChar(100)
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productId], references: [id])
}

model SubCategory {
  id         Int       @id @default(autoincrement()) @db.SmallInt
  name       String    @db.VarChar(100)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  categoryId Int       @db.SmallInt
  category   Category  @relation(fields: [categoryId], references: [id])
  products   Product[]
}

model Category {
  id            Int           @id @default(autoincrement()) @db.SmallInt
  name          String        @db.VarChar(100)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  subCategories SubCategory[]
}

model Cart {
  id           Int            @id @default(autoincrement())
  sessionId    String         @db.VarChar(150)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  CartProducts CartProducts[]
  order        Order[]
}

model CartProducts {
  id         Int      @id @default(autoincrement()) @db.SmallInt
  quantity   Int      @db.SmallInt
  notes      String?
  status     Boolean
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  cartId     Int      @db.Int
  cart       Cart     @relation(fields: [cartId], references: [id])
  product_id Int      @db.Int
  product    Product  @relation(fields: [product_id], references: [id])
}

model Order {
  id            Int         @id @default(autoincrement())
  quantity      Int         @db.SmallInt
  total_price   Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  detailOrderId Int         @db.Int
  detailOrder   DetailOrder @relation(fields: [detailOrderId], references: [id])
  cartId        Int
  cart          Cart        @relation(fields: [cartId], references: [id])
}

model DetailOrder {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(100)
  phoneNumber String   @db.VarChar(20)
  address     String   @db.VarChar(200)
  notes       String   @db.Text
  total       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orders      Order[]
}
